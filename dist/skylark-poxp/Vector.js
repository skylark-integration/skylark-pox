/**
 * skylark-poxp - A version of poxp that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-poxp/
 * @license MIT
 */
define(["./poxp"],function(t){class r extends Array{constructor(...t){let r=t;Array.isArray(t[0])&&(r=t[0]),super(...r)}set x(t){this[0]=t}set y(t){this[1]=t}set z(t){this[2]=t}set w(t){this[3]=t}set r(t){this[0]=t}set g(t){this[1]=t}set b(t){this[2]=t}set a(t){this[3]=t}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}get w(){return this[3]}get r(){return this[0]}get g(){return this[1]}get b(){return this[2]}get a(){return this[3]}get xy(){return new r(this[0],this[1])}get yx(){return new r(this[1],this[0])}get xz(){return new r(this[0],this[2])}get zx(){return new r(this[2],this[0])}get yz(){return new r(this[1],this[2])}get zy(){return new r(this[2],this[1])}get xyz(){return new r(this[0],this[1],this[2])}get xzy(){return new r(this[0],this[2],this[1])}get yxz(){return new r(this[1],this[0],this[2])}get yzx(){return new r(this[1],this[2],this[0])}get zxy(){return new r(this[2],this[0],this[1])}get zyx(){return new r(this[2],this[1],this[0])}get rgb(){return new r(this[0],this[1],this[2])}cross(t){if(3!=this.length||3!=t.length)throw-1;let e=[this[1]*t[2]-this[2]*t[1],this[2]*t[0]-this[0]*t[2],this[0]*t[1]-this[1]*t[0]];return new r(e)}mix(t,e){return new r(this.map((r,s)=>r*(1-e)+t[s]*e))}invert(){return new r(this.map(t=>-t))}add(t){if(Array.isArray(t)||(t=new Array(this.length).fill(t)),this.length!=t.length)throw-1;return new r(this.map((r,e)=>r+t[e]))}sub(t){if(Array.isArray(t)||(t=new Array(this.length).fill(t)),this.length!=t.length)throw-1;return new r(this.map((r,e)=>r-t[e]))}mult(t){return Array.isArray(t)||(t=new Array(this.length).fill(t)),new r(this.map((r,e)=>r*t[e]))}normalize(){let t=this.hypot();return new r(this.map((r,e)=>0!=t?r/t:0))}floor(){return new r(this.map((t,r)=>Math.floor(t)))}ceil(){return new r(this.map((t,r)=>Math.ceil(t)))}fract(){return new r(this.map((t,r)=>t-Math.floor(t)))}min(t){return Array.isArray(t)||(t=new Array(this.length).fill(t)),new r(this.map((r,e)=>r<t[e]?r:t[e]))}max(t){return Array.isArray(t)||(t=new Array(this.length).fill(t)),new r(this.map((r,e)=>r>t[e]?r:t[e]))}clamp(t,e){return new r(this.map((r,s)=>r<t?t:r>e?e:r))}step(t){return new r(this.map((r,e)=>r<t?0:1))}mod(t){return new r(this.map((r,e)=>r%t))}dot(t){return this.reduce((r,e,s)=>r+=e*t[s],0)}distance(t){return new r(...this).sub(t).hypot()}hypot(){return Math.hypot(...this)}equal(t){return this.reduce((r,e,s)=>r&&e===t[s],!0)}}return t.Vector=r});
//# sourceMappingURL=sourcemaps/Vector.js.map

/**
 * skylark-poxp - A version of poxp that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-poxp/
 * @license MIT
 */
define(["./poxp"],function(e){var t=function(){return this.idx=0,this.conn=!1,this.gpadcount=0,!!navigator.getGamepads&&(gamepads=navigator.getGamepads(),this.gpadcount=gamepads.length,this.gpadcount>0)};return t.prototype.init=function(e,t){if(void 0==e&&(e=0),this.idx=e,!navigator.getGamepads)return!1;let s=!0;return gamepads=navigator.getGamepads(),gamepads[this.idx]?(console.log("gpad init "+this.idx),this.axes=gamepads[this.idx].axes,this.conn=!1,this.egp=null):(this.conn=!1,s=!1),addEventListener("gamepadconnected",e=>{e.gamepad.index==this.idx&&(console.log("gpad reconnected "+e.gamepad.index),this.axes=e.gamepad.axes,this.conn=!0,this.get(),t&&t(this,!0))}),addEventListener("gamepaddisconnected",e=>{e.gamepad.index==this.idx&&(console.log("gpad disconnected "+e.gamepad.index),this.conn=!1,t&&t(this,!1))}),this.lastGp={buttons:[{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1}],axes:[0,0,0,0]},this.egp={buttons:[{pressed:!1,touched:!1},{pressed:!1,touched:!1}],axes:[0,0,0,0]},s},t.prototype.get=function(e){var t;if(POXPDevice)if(this.emu=!1,POXPDevice.isPresenting&&POXPDevice.session.inputSources){const e=POXPDevice.session.inputSources;for(let s=0;s<=e.length-1;s++)if(e[s].gamepad&&"xr-standard"==e[s].gamepad.mapping){if(e[s].gamepad.hand=e[s].handedness,"left"==e[s].handedness&&1==this.idx&&(t=e[s].gamepad),"right"==e[s].handedness&&0==this.idx&&(t=e[s].gamepad),t){this.conn=!0;break}this.conn=!1}}else this.conn=!1;if(!t){if(null==this.egp)return null;this.conn=!0,t=this.egp,this.emu=!0}var s=this.lastGp;t.conn=this.conn,t.emu=this.emu,t.bf=!1,t.pf=!1,t.tf=!1,t.dbtn=[],t.dpad=[],t.dtouch=[];for(var d=0;d<t.buttons.length;d++)t.dbtn[d]=0,t.dtouch[d]=0,s&&s.buttons[d]&&(!s.buttons[d].pressed&&t.buttons[d].pressed&&(t.dbtn[d]=1,t.bf=!0),s.buttons[d].pressed&&!t.buttons[d].pressed&&(t.dbtn[d]=-1,t.bf=!0),!s.buttons[d].touched&&t.buttons[d].touched&&(t.dtouch[d]=1,t.tf=!0),s.buttons[d].touched&&!t.buttons[d].touched&&(t.dtouch[d]=-1,t.tf=!0)),s.buttons[d]={pressed:t.buttons[d].pressed,touched:t.buttons[d].touched};let n=[t.axes[0],t.axes[1],t.axes[2],t.axes[3]];void 0!==t.axes[2]&&void 0!==t.axes[3]?(n[0]=t.axes[2],n[1]=t.axes[3],t.stick=!0):t.stick=!1,t.eaxes=n;for(d=0;d<n.length;d++)Math.abs(n[d])<.001&&(t.axes[d]=0),t.dpad[d]=0,s&&(Math.abs(s.axes[d])<.5&&Math.abs(n[d])>=.5&&(t.dpad[d]=1,t.pf=!0),Math.abs(s.axes[d])>=.5&&Math.abs(n[d])<.5&&(t.dpad[d]=-1,t.pf=!0)),s.axes[d]=n[d];return this.gp=t,this.ev&&(t.bf||t.pf||t.tf)&&this.ev(t),t},t.prototype.set=function(e){this.egp=e},t.prototype.clear=function(e){void 0==e&&(e={buttons:[{pressed:!1,touched:!1},{pressed:!1,touched:!1}],axes:[0,0,0,0]}),this.egp=e,this.cf=!0},e.GPad=t});
//# sourceMappingURL=sourcemaps/GPad.js.map

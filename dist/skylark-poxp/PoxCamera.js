/**
 * skylark-poxp - A version of poxp that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-poxp/
 * @license MIT
 */
define(["./poxp","./CanvasMatrix4"],function(a,t){return a.PoxCamera=class{constructor(a,c){this.poxp=a,this.cam={camCX:0,camCY:0,camCZ:0,camVX:0,camVY:0,camVZ:1,camUPX:0,camUPY:1,camUPZ:0,camRX:30,camRY:-30,camRZ:0,camd:20,camAngle:90,camWidth:1,camNear:.01,camFar:1e3,camGyro:!0,gPad:!0,sbase:.06,moveSpeed:1.3,rotAngle:30,moveY:!1,padMoveUD:!0,padRot:!0,headVec:[0,0,0]};for(let a in c)this.cam[a]=c[a];this.cama=!1,this.rotX=0,this.rotY=0,this.gev=null,this.gx=0,this.gy=0,this.gz=0,this.vcx=0,this.vcy=0,this.vcz=0,this.vrx=0,this.vry=0,this.vrz=0,this.keydown=!1,this.vr=!1,this.camVP=[new t,new t],this.camP=[new t,new t],this.camV=[new t,new t],this.vrv=[new t,new t],this.vrp=[new t,new t],this.tempM=new t,this.pvy=!1,this.pvx=!1}setCam(a){for(let t in a)this.cam[t]=a[t];this.cama=!1}getCam(){const a={basePos:[this.cam.camCX,this.cam.camCY,this.cam.camCZ],baseRot:[this.cam.camRX,this.cam.camRY,this.cam.camRZ],position:Array.from(this.cam.campos),headVec:Array.from(this.cam.headVec)};return this.cam.orientation?a.headOri=Array.from(this.cam.orientation):a.headOri=[0,0,0,1],this.cam.position?a.headPos=Array.from(this.cam.position):a.headPos=[0,0,0],a}vrchange(a){a&&(this.cam.camRX=0,this.cam.camRZ=0)}event(a,t){const c=300*this.poxp.pixRatio/this.poxp.can.width,s=this.poxp.pox.setting&&this.poxp.pox.setting.scale?this.poxp.pox.setting.scale:1;switch(a){case"down":this.rotX=this.cam.camRX,this.rotY=this.cam.camRY;break;case"move":this.cam.camRX=this.rotX+t.dy*c,this.cam.camRY=this.rotY+t.dx*c,this.cam.camRX>89&&(this.cam.camRX=89),this.cam.camRX<-89&&(this.cam.camRX=-89);break;case"up":this.rotX+=t.dy*c,this.rotY+=t.dx*c,null!==this.gev&&(this.gx=this.gev.rx-this.rotX,this.gy=this.gev.ry-this.rotY);break;case"out":this.rotX+=t.dy*c,this.rotY+=t.dx*c;break;case"wheel":this.cam.camd+=t/100*s;break;case"gesture":if(0==t.z)return this.gz=this.cam.camd,!1;this.cam.camd=this.gz/t.z;break;case"gyro":if(this.keydown||!this.cam.camGyro)return!0;if(null===t.rx)return!0;this.gev=t,this.cam.camRX=t.rx-this.gx,this.cam.camRY=t.ry-this.gy,this.cam.camRX>89&&(this.cam.camRX=89),this.cam.camRX<-89&&(this.cam.camRX=-89);break;case"keydown":this.cam.camd;const i=this.cam.moveSpeed;let m="";if(this.keydown=!0,t.altKey)switch(t.key){case"ArrowUp":this.cam.camd=this.cam.camd-i,this.cam.camd<0&&(cthis.am.camd=0);break;case"ArrowDown":this.cam.camd=this.cam.camd+i}else switch(t.key){case"ArrowLeft":case"Left":case"h":this.vry=-i;break;case"ArrowUp":case"Up":case"k":this.vrx=-i;break;case"ArrowRight":case"Right":case"l":this.vry=i;break;case"ArrowDown":case"Down":case"j":this.vrx=i;break;case"w":m="f";break;case"s":m="b";break;case"a":m="l";break;case"d":m="r";break;case"q":m="u";break;case"e":m="d"}if(""!=m){const a=("b"==m||"d"==m?-1:1)*i*s,t=this.cam;if("u"==m||"d"==m)this.vcy=a;else{let c=t.camRY;"l"==m&&(c-=90),"r"==m&&(c+=90),this.vcx=Math.sin(c*RAD)*a,this.vcz=-Math.cos(c*RAD)*a}}break;case"keyup":switch(this.keydown=!1,null!==this.gev&&(this.gx=this.gev.rx-this.cam.camRX,this.gy=this.gev.ry-this.cam.camRY),t.key){case"ArrowLeft":case"Left":case"h":case"ArrowRight":case"Right":case"l":this.vry=0;break;case"ArrowUp":case"Up":case"k":case"ArrowDown":case"Down":case"j":this.vrx=0;break;case"w":case"d":case"a":case"s":case" ":this.vcx=0,this.vcz=0;break;case"q":case"e":this.vcy=0;break;case"Dead":this.vrx=0,this.vry=0,this.vcx=0,this.vcz=0}}}update(a){const t=(this.poxp.ctime-this.poxp.ltime)/1e3;"fix"!=this.cam.camMode&&(this.cam.camRX+=this.vrx,this.cam.camRX<-89&&(this.cam.camRX=-89),this.cam.camRX>89&&(this.cam.camRX=89),this.cam.camRY+=this.vry),"walk"==this.cam.camMode&&(this.cama||(this.cam.camCX+=this.vcx*t,this.cam.camCY+=this.vcy*t,this.cam.camCZ+=this.vcz*t),this.cam.camRY+=this.vry*t),this.cama&&(this.cam.camCX+=this.acx*t,this.cam.camCY+=this.acy*t,this.cam.camCZ+=this.acz*t,this.ad+=this.av*t,this.ad>this.al&&(this.cam.camCX=this.aex,this.cam.camCY=this.aey,this.cam.camCZ=this.aez,this.cama=!1))}setPad(a,t){let c=a||t;if(c&&"walk"==this.cam.camMode){let a=[c.axes[0],c.axes[1]];if(void 0!=c.axes[2]&&0!=c.axes[2]&&(a[0]=c.axes[2]),void 0!=c.axes[3]&&0!=c.axes[3]&&(a[1]=c.axes[3]),this.cam.padMoveUD&&c.buttons[1]&&c.buttons[1].pressed)return this.vcy=-a[1]*this.cam.moveSpeed,void(this.pvy=!0);this.pvy&&(this.vcy=0,this.pvy=!1);let t=c.buttons[2]&&c.buttons[2].pressed?5*this.cam.moveSpeed:this.cam.moveSpeed;if(Math.abs(a[0])<Math.abs(a[1])&&Math.abs(a[1])>0)return this.vcx=-this.cam.headVec[0]*a[1]*t,this.cam.moveY&&(this.vcy=-this.cam.headVec[1]*a[1]*t),this.vcz=-this.cam.headVec[2]*a[1]*t,void(this.pvx=!0);if(this.pvx&&(this.vcx=0,this.vcy=0,this.vcz=0,this.pvx=!1),this.cam.padRot&&c.dpad[0]>0){let t=(a[0]>0?1:-1)*this.cam.rotAngle;this.cam.camRY+=t}}}moveTo(a,t,c,s){if(this.cama)return;let i=null!==a?a:this.cam.camCX,m=null!==t?t:this.cam.camCY,h=null!==c?c:this.cam.camCZ;if(s&&s.velocity){let a=i-this.cam.camCX,t=m-this.cam.camCY,c=h-this.cam.camCZ,e=s.velocity/Math.hypot(a,t,c);a*=e,t*=e,c*=e,this.acx=a,this.acy=t,this.acz=c,this.aex=i,this.aey=m,this.aez=h,this.al=s.velocity/e,this.ad=0,this.av=s.velocity,this.cama=!0}else this.cam.camCX=i,this.cam.camCY=m,this.cam.camCZ=h,this.cama=!1}moveCancel(){this.cama=!1}getMtx(a,t){const c=this.cam,s=this.poxp.render.wwg.can,i=s.width/(s.height*(t?2:1));let m,h,e,r,o,n,l,v,d,p,R=null;if(l=c.camUPX,v=c.camUPY,d=c.camUPZ,r=[0,0],o=[0,0],n=[0,0],!this.poxp.isVR){if("fix"==c.camMode)m=c.camVX,h=c.camVY,e=c.camVZ,this.cam.headVec=[m,h,e,0];else if("vr"==c.camMode||"walk"==c.camMode){m=c.camCX+1*Math.sin(c.camRY*RAD)*Math.cos(c.camRX*RAD),h=c.camCY+1*-Math.sin(c.camRX*RAD),e=c.camCZ+1*-Math.cos(c.camRY*RAD)*Math.cos(c.camRX*RAD);let a=(new Mat4).rotate(-this.cam.camRX,1,0,0).rotate(-this.cam.camRY,0,1,0).rotate(-this.cam.camRZ,0,0,1);l=-Math.sin(c.camRZ*RAD),v=Math.cos(c.camRZ*RAD),this.cam.headVec=a.multVec4(0,0,-1,0)}else{p=c.camd*a,c.camCX=-Math.sin(c.camRY*RAD)*p*Math.cos(c.camRX*RAD),c.camCY=Math.sin(c.camRX*RAD)*p,c.camCZ=Math.cos(c.camRY*RAD)*p*Math.cos(c.camRX*RAD),m=0,h=0,e=0,p<0&&(m=2*c.camCX,h=2*c.camCY,e=2*c.camCZ);let t=Math.hypot(c.camCX,c.camCY,c.camCZ);this.cam.headVec=[-c.camCX/t,-c.camCY/t,-c.camCZ/t,0]}if(this.cam.campos=[c.camCX,c.camCY,c.camCZ],this.camVP[0].makeIdentity(),this.camVP[1].makeIdentity(),this.camP[0].makeIdentity(),this.camP[1].makeIdentity(),this.camV[0].makeIdentity(),this.camV[1].makeIdentity(),t){const t=-c.sbase*a;r[0]=v*(c.camCZ-e)-d*(c.camCY-h),o[0]=-l*(c.camCZ-e)+d*(c.camCX-m),n[0]=l*(c.camCY-h)-v*(c.camCX-m);const s=Math.hypot(r[0],o[0],n[0]);r[0]*=t/s,o[0]*=t/s,n[0]*=t/s,r[1]=-r[0],o[1]=-o[0],n[1]=-n[0],this.camV[0].lookat(r[0]+c.camCX,o[0]+c.camCY,n[0]+c.camCZ,m+r[0],h+o[0],e+n[0],l,v,d),this.camV[1].lookat(r[1]+c.camCX,o[1]+c.camCY,n[1]+c.camCZ,m+r[1],h+o[1],e+n[1],l,v,d),0!=c.camAngle?this.camP[0].perspective(c.camAngle,i,c.camNear,c.camFar):this.camP[0].pallarel(c.camd,i,c.camNear,c.camFar),this.camP[1]=this.camP[0],this.camVP[0].load(this.camV[0]).multRight(this.camP[0]),this.camVP[1].load(this.camV[1]).multRight(this.camP[1])}else this.camV[0].lookat(c.camCX,c.camCY,c.camCZ,m,h,e,l,v,d),0!=c.camAngle?this.camP[0].perspective(c.camAngle,i,c.camNear,c.camFar):this.camP[0].pallarel(c.camd,i,c.camNear,c.camFar),this.camVP[0].load(this.camV[0]).multRight(this.camP[0])}if(this.poxp.isVR){if(POXPDevice.setDepth({camNear:c.camNear,camFar:c.camFar}),!(R=POXPDevice.getFrameData()))return;this.cam.orientation=R.pose.orientation,this.cam.position=R.pose.position,this.cam.position||(this.cam.position=[0,0,0]),this.vrv[1].load(R.rightViewMatrix),this.vrv[0].load(R.leftViewMatrix),this.vrp[1].load(R.rightProjectionMatrix),this.vrp[0].load(R.leftProjectionMatrix),this.tempM.makeIdentity().translate(-c.camCX,-c.camCY,-c.camCZ).rotate(c.camRX,1,0,0).rotate(c.camRY,0,1,0).rotate(c.camRZ,0,0,1),this.camV[0].load(this.vrv[0]),this.leftCorrMtx&&this.camV[0].multRight(this.leftCorrMtx),this.camV[0].multLeft(this.tempM),this.camVP[0].load(this.camV[0]).multRight(this.vrp[0]),this.camP[0].load(this.vrp[0]),this.camV[1].load(this.vrv[1]),this.rightCorrMtx&&this.camV[1].multRight(this.rightCorrMtx),this.camV[1].multLeft(this.tempM),this.camVP[1].load(this.camV[1]).multRight(this.vrp[1]),this.camP[1].load(this.vrp[1]);let a=0,t=0,s=1;if(this.cam.orientation){let c=this.cam.orientation[0],i=this.cam.orientation[1],m=this.cam.orientation[2],h=this.cam.orientation[3];a=2*(-c*m-i*h),t=2*(-i*m+c*h),s=c*c+i*i-m*m-h*h;let e=Math.hypot(a,t,s);a/=e,t/=e,s/=e}this.tempM.invert();let i=this.tempM;this.cam.headVec=i.multVec4(a,t,s,0),this.cam.campos=i.multVec4(this.cam.position[0],this.cam.position[1],this.cam.position[2],1).slice(0,3);let m=(new Mat4).load(this.camV[1]).invert(),h=(new Mat4).load(this.camV[0]).invert();r[0]=h.buf[12]-c.camCX,o[0]=h.buf[13]-c.camCY,n[0]=h.buf[14]-c.camCZ,r[1]=m.buf[12]-c.camCX,o[1]=m.buf[13]-c.camCY,n[1]=m.buf[14]-c.camCZ}return[{camX:c.camCX+r[0],camY:c.camCY+o[0],camZ:c.camCZ+n[0],camV:this.camV[0],camVP:this.camVP[0],camP:this.camP[0],vrFrame:R},{camX:c.camCX+r[1],camY:c.camCY+o[1],camZ:c.camCZ+n[1],camV:this.camV[1],camVP:this.camVP[1],camP:this.camP[1],vrFrame:R}]}}});
//# sourceMappingURL=sourcemaps/PoxCamera.js.map

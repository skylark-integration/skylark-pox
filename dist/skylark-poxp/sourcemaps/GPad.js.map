{"version":3,"sources":["GPad.js"],"names":["define","pox","POXPDevice","GPad","this","idx","conn","gpadcount","navigator","getGamepads","gamepads","length","prototype","init","cb","undefined","ret","console","log","axes","egp","addEventListener","e","gamepad","index","get","lastGp","buttons","pressed","touched","pad","gp","WebXR","emu","isPresenting","session","inputSources","is","i","mapping","hand","handedness","pose","vrFrame","getPose","gripSpace","referenceSpace","transform","orientation","x","y","z","w","position","lgp","bf","pf","tf","dbtn","dpad","dtouch","stick","eaxes","Math","abs","ev","set","clear","cf"],"mappings":";;;;;;;AAAAA,QACI,QACA,YACF,SAASC,EAAIC,GAKd,IAAIC,EAAO,WAIV,OAHAC,KAAKC,IAAM,EACXD,KAAKE,MAAO,EACZF,KAAKG,UAAY,IACbC,UAAUC,cACdC,SAAWF,UAAUC,cACrBL,KAAKG,UAAYG,SAASC,OACnBP,KAAKG,UAAY,IAuJzB,OApJAJ,EAAKS,UAAUC,KAAO,SAASR,EAAIS,GAGlC,QAFQC,GAALV,IAAgBA,EAAM,GACzBD,KAAKC,IAAMA,GACPG,UAAUC,YAAa,OAAO,EAClC,IAAIO,GAAM,EA6CV,OA5CAN,SAAWF,UAAUC,cAElBC,SAASN,KAAKC,MAChBY,QAAQC,IAAI,aAAad,KAAKC,KAC9BD,KAAKe,KAAMT,SAASN,KAAKC,KAAKc,KAC9Bf,KAAKE,MAAO,EACZF,KAAKgB,IAAM,OAEXhB,KAAKE,MAAO,EACZU,GAAM,GAEPK,iBAAiB,mBAAqBC,IAClCA,EAAEC,QAAQC,OAASpB,KAAKC,MAC3BY,QAAQC,IAAI,oBAAoBI,EAAEC,QAAQC,OAE1CpB,KAAKe,KAAOG,EAAEC,QAAQJ,KACtBf,KAAKE,MAAO,EACZF,KAAKqB,MACFX,GAAIA,EAAGV,MAAK,MAEhBiB,iBAAiB,sBAAwBC,IACrCA,EAAEC,QAAQC,OAASpB,KAAKC,MAC3BY,QAAQC,IAAI,qBAAqBI,EAAEC,QAAQC,OAC3CpB,KAAKE,MAAO,EACTQ,GAAIA,EAAGV,MAAK,MAEhBA,KAAKsB,QACJC,UACEC,SAAQ,EAAMC,SAAQ,IACtBD,SAAQ,EAAMC,SAAQ,IACtBD,SAAQ,EAAMC,SAAQ,IACtBD,SAAQ,EAAMC,SAAQ,IACtBD,SAAQ,EAAMC,SAAQ,IACtBD,SAAQ,EAAMC,SAAQ,IAExBV,MAAM,EAAE,IAETf,KAAKgB,KACJO,UACEC,SAAQ,EAAMC,SAAQ,IACtBD,SAAQ,EAAMC,SAAQ,IAExBV,MAAM,EAAE,IAEFH,GAERb,EAAKS,UAAUa,IAAM,SAASK,GAC7B,IAAIC,EACJ,GAAG7B,GAAcA,EAAW8B,MAE3B,GADA5B,KAAK6B,KAAM,EACR/B,EAAWgC,cAAgBhC,EAAWiC,QAAQC,aAAc,CAC/D,MAAMC,EAAKnC,EAAWiC,QAAQC,aAC9B,IAAK,IAAIE,EAAE,EAAEA,GAAGD,EAAG1B,OAAO,EAAE2B,IAC3B,GAAID,EAAGC,GAAGf,SAAkC,eAAvBc,EAAGC,GAAGf,QAAQgB,QAAwB,CAK1D,GAJAF,EAAGC,GAAGf,QAAQiB,KAAOH,EAAGC,GAAGG,WACL,QAAlBJ,EAAGC,GAAGG,YAAgC,GAAVrC,KAAKC,MAAS0B,EAAGM,EAAGC,GAAGf,SACjC,SAAlBc,EAAGC,GAAGG,YAAiC,GAAVrC,KAAKC,MAAS0B,EAAGM,EAAGC,GAAGf,SAErDQ,EAAI,CACN,IAAIW,EAAOxC,EAAWyC,QAAQC,QAAQP,EAAGC,GAAGO,UAAU3C,EAAW4C,gBAC9DJ,IACFX,EAAGW,QACAA,EAAKK,UAAUC,cAAajB,EAAGW,KAAKM,aAAeN,EAAKK,UAAUC,YAAYC,EAAEP,EAAKK,UAAUC,YAAYE,EAAER,EAAKK,UAAUC,YAAYG,EAAET,EAAKK,UAAUC,YAAYI,IACrKV,EAAKK,UAAUM,WAAUtB,EAAGW,KAAKW,UAAaX,EAAKK,UAAUM,SAASJ,EAAEP,EAAKK,UAAUM,SAASH,EAAER,EAAKK,UAAUM,SAASF,KAG9H/C,KAAKE,MAAO,EACZ,MACMF,KAAKE,MAAO,QAGdF,KAAKE,MAAO,EAEpB,IAAIyB,EAAI,CACP,GAAa,MAAV3B,KAAKgB,IAAW,OAAO,KAC1BhB,KAAKE,MAAO,EACZyB,EAAK3B,KAAKgB,IACVhB,KAAK6B,KAAM,EAEZ,IAAIqB,EAAMlD,KAAKsB,OACfK,EAAGzB,KAAOF,KAAKE,KACfyB,EAAGE,IAAM7B,KAAK6B,IACdF,EAAGwB,IAAK,EACRxB,EAAGyB,IAAK,EACRzB,EAAG0B,IAAK,EACR1B,EAAG2B,QACH3B,EAAG4B,QACH5B,EAAG6B,UAGH,IAAI,IAAItB,EAAE,EAAEA,EAAEP,EAAGJ,QAAQhB,OAAO2B,IAC/BP,EAAG2B,KAAKpB,GAAK,EACbP,EAAG6B,OAAOtB,GAAK,EACZgB,GAAOA,EAAI3B,QAAQW,MACjBgB,EAAI3B,QAAQW,GAAGV,SAAWG,EAAGJ,QAAQW,GAAGV,UAAUG,EAAG2B,KAAKpB,GAAK,EAAGP,EAAGwB,IAAG,GACzED,EAAI3B,QAAQW,GAAGV,UAAYG,EAAGJ,QAAQW,GAAGV,UAAUG,EAAG2B,KAAKpB,IAAM,EAAEP,EAAGwB,IAAG,IACxED,EAAI3B,QAAQW,GAAGT,SAAWE,EAAGJ,QAAQW,GAAGT,UAAUE,EAAG6B,OAAOtB,GAAK,EAAGP,EAAG0B,IAAG,GAC3EH,EAAI3B,QAAQW,GAAGT,UAAYE,EAAGJ,QAAQW,GAAGT,UAAUE,EAAG6B,OAAOtB,IAAM,EAAEP,EAAG0B,IAAG,IAE/EH,EAAI3B,QAAQW,IAAMV,QAAQG,EAAGJ,QAAQW,GAAGV,QAC/BC,QAAQE,EAAGJ,QAAQW,GAAGT,SAIhC,IAAIV,GAAQY,EAAGZ,KAAK,GAAGY,EAAGZ,KAAK,GAAGY,EAAGZ,KAAK,GAAGY,EAAGZ,KAAK,SACrCJ,IAAbgB,EAAGZ,KAAK,SAA+BJ,IAAbgB,EAAGZ,KAAK,IACnCA,EAAK,GAAKY,EAAGZ,KAAK,GAClBA,EAAK,GAAKY,EAAGZ,KAAK,GAClBY,EAAG8B,OAAQ,GACN9B,EAAG8B,OAAQ,EAElB9B,EAAG+B,MAAQ3C,EACX,IAAQmB,EAAE,EAAEA,EAAEnB,EAAKR,OAAO2B,IACtByB,KAAKC,IAAI7C,EAAKmB,IAVN,OAUkBP,EAAGZ,KAAKmB,GAAK,GAC1CP,EAAG4B,KAAKrB,GAAK,EACVgB,IACCS,KAAKC,IAAIV,EAAInC,KAAKmB,IAdZ,IAcsByB,KAAKC,IAAI7C,EAAKmB,KAdpC,KAc8CP,EAAG4B,KAAKrB,GAAK,EAAEP,EAAGyB,IAAG,GACzEO,KAAKC,IAAIV,EAAInC,KAAKmB,KAfZ,IAeuByB,KAAKC,IAAI7C,EAAKmB,IAfrC,KAe8CP,EAAG4B,KAAKrB,IAAM,EAAEP,EAAGyB,IAAG,IAE9EF,EAAInC,KAAKmB,GAAKnB,EAAKmB,GAQpB,OANAlC,KAAK2B,GAAKA,EAEP3B,KAAK6D,KAAOlC,EAAGwB,IAAMxB,EAAGyB,IAAMzB,EAAG0B,KACnCrD,KAAK6D,GAAGlC,GAGFA,GAER5B,EAAKS,UAAUsD,IAAM,SAASnC,GAC7B3B,KAAKgB,IAAMW,GAEZ5B,EAAKS,UAAUuD,MAAQ,SAASpC,QACxBhB,GAAJgB,IAAgBA,GAClBJ,UACEC,SAAQ,EAAMC,SAAQ,IACtBD,SAAQ,EAAMC,SAAQ,IAExBV,MAAM,EAAE,KAETf,KAAKgB,IAAMW,EACX3B,KAAKgE,IAAK,GAEJnE,EAAIE,KAAOA","file":"../GPad.js","sourcesContent":["define([\n    \"./pox\",\n    \"./Device\"\n],function(pox,POXPDevice){\n\t/**\n\t *\tgamepad object \n\t *\t@constructor \n\t */\n\tvar GPad = function() {\n\t\tthis.idx = 0 \n\t\tthis.conn = false \n\t\tthis.gpadcount = 0 \n\t\tif(!navigator.getGamepads) return false ;\n\t\tgamepads = navigator.getGamepads();\n\t\tthis.gpadcount = gamepads.length\n\t\treturn this.gpadcount > 0  \n\t}\n\n\tGPad.prototype.init = function(idx,cb) {\n\t\tif(idx==undefined) idx = 0 \n\t\tthis.idx = idx \n\t\tif(!navigator.getGamepads) return false ;\n\t\tlet ret = true \n\t\tgamepads = navigator.getGamepads();\n\t//\tconsole.log(gamepads)\n\t\tif(gamepads[this.idx]) {\n\t\t\tconsole.log(\"gpad init \"+this.idx) ;\n\t\t\tthis.axes =gamepads[this.idx].axes \n\t\t\tthis.conn = false ;\n\t\t\tthis.egp = null ;\n\t\t} else {\n\t\t\tthis.conn = false \n\t\t\tret = false \n\t\t}\n\t\taddEventListener(\"gamepadconnected\", (e)=> {\n\t\t\tif(e.gamepad.index != this.idx ) return \n\t\t\tconsole.log(\"gpad reconnected \"+e.gamepad.index) ;\n\t//\t\tconsole.log(e.gamepad) ;\n\t\t\tthis.axes = e.gamepad.axes \n\t\t\tthis.conn = true; \n\t\t\tthis.get()\n\t\t\tif(cb) cb(this,true) \n\t\t})\t\n\t\taddEventListener(\"gamepaddisconnected\", (e)=> {\n\t\t\tif(e.gamepad.index != this.idx ) return \n\t\t\tconsole.log(\"gpad disconnected \"+e.gamepad.index) ;\n\t\t\tthis.conn = false ;\n\t\t\tif(cb) cb(this,false) \n\t\t})\n\t\tthis.lastGp = {\n\t\t\tbuttons:[\n\t\t\t\t{pressed:false,touched:false},\n\t\t\t\t{pressed:false,touched:false},\n\t\t\t\t{pressed:false,touched:false},\n\t\t\t\t{pressed:false,touched:false},\n\t\t\t\t{pressed:false,touched:false},\n\t\t\t\t{pressed:false,touched:false}\n\t\t\t],\n\t\t\taxes:[0,0]\n\t\t}\n\t\tthis.egp = {\n\t\t\tbuttons:[\n\t\t\t\t{pressed:false,touched:false},\n\t\t\t\t{pressed:false,touched:false}\n\t\t\t],\n\t\t\taxes:[0,0]\n\t\t}\n\t\treturn ret ;\n\t}\n\tGPad.prototype.get = function(pad) {\n\t\tvar gp \n\t\tif(POXPDevice && POXPDevice.WebXR) {\n\t\t\tthis.emu = false \n\t\t\tif(POXPDevice.isPresenting && POXPDevice.session.inputSources) {\n\t\t\tconst is = POXPDevice.session.inputSources\n\t\t\tfor (let i=0;i<=is.length-1;i++) {\n\t\t\t\tif (is[i].gamepad && is[i].gamepad.mapping==\"xr-standard\") {\n\t\t\t\t\tis[i].gamepad.hand = is[i].handedness\n\t\t\t\t\tif (is[i].handedness==\"left\" && this.idx==1) {gp=is[i].gamepad }\n\t\t\t\t\tif (is[i].handedness==\"right\" && this.idx==0) {gp=is[i].gamepad }\n\n\t\t\t\t\tif(gp) {\n\t\t\t\t\t\tlet pose = POXPDevice.vrFrame.getPose(is[i].gripSpace,POXPDevice.referenceSpace)\n\t\t\t\t\t\tif(pose) {\n\t\t\t\t\t\t\tgp.pose = {}\n\t\t\t\t\t\t\tif(pose.transform.orientation) gp.pose.orientation = [pose.transform.orientation.x,pose.transform.orientation.y,pose.transform.orientation.z,pose.transform.orientation.w]\n\t\t\t\t\t\t\tif(pose.transform.position) gp.pose.position =  [pose.transform.position.x,pose.transform.position.y,pose.transform.position.z]\n\t//\t\t\t\t\tconsole.log(pose)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.conn = true \n\t\t\t\t\t\tbreak \n\t\t\t\t\t} else this.conn = false \t\t\t\t\t\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t} else this.conn = false \n\t\t} \n\t\tif(!gp) {\n\t\t\tif(this.egp==null) return null ;\t\n\t\t\tthis.conn = true \n\t\t\tgp = this.egp\n\t\t\tthis.emu = true \n\t\t} \n\t\tvar lgp = this.lastGp \n\t\tgp.conn = this.conn \n\t\tgp.emu = this.emu \n\t\tgp.bf = false \n\t\tgp.pf = false \n\t\tgp.tf = false \n\t\tgp.dbtn = [] \n\t\tgp.dpad = []\n\t\tgp.dtouch = [] \n\n\t//\tif(lgp) console.log(lgp.buttons[1].pressed +\" \"+ gp.buttons[1].pressed)\n\t\tfor(var i=0;i<gp.buttons.length;i++) {\n\t\t\tgp.dbtn[i] = 0 \n\t\t\tgp.dtouch[i] = 0 \n\t\t\tif(lgp && lgp.buttons[i]) {\n\t\t\t\tif(!lgp.buttons[i].pressed && gp.buttons[i].pressed) {gp.dbtn[i] = 1; gp.bf=true} \n\t\t\t\tif(lgp.buttons[i].pressed && !gp.buttons[i].pressed) {gp.dbtn[i] = -1;gp.bf=true}\n\t\t\t\tif(!lgp.buttons[i].touched && gp.buttons[i].touched) {gp.dtouch[i] = 1; gp.tf=true} \n\t\t\t\tif(lgp.buttons[i].touched && !gp.buttons[i].touched) {gp.dtouch[i] = -1;gp.tf=true}\n\t\t\t}\n\t\t\tlgp.buttons[i] = {pressed:gp.buttons[i].pressed,\n\t\t\t\t\t\t\t\t\t\t\t\ttouched:gp.buttons[i].touched}\n\t\t}\n\t\tconst th = 0.5 \n\t\tconst eps = 0.001 \n\t\tlet axes = [gp.axes[0],gp.axes[1],gp.axes[2],gp.axes[3]]\n\t\tif(gp.axes[2]!==undefined && gp.axes[3]!==undefined) {\n\t\t\t axes[0] = gp.axes[2]\n\t\t\t axes[1] = gp.axes[3]\n\t\t\t gp.stick = true ;\n\t\t} else gp.stick = false ;\n\t\t\n\t\tgp.eaxes = axes \n\t\tfor(var i=0;i<axes.length;i++) {\n\t\t\tif(Math.abs(axes[i]) < eps ) gp.axes[i] = 0 \n\t\t\tgp.dpad[i] = 0 \n\t\t\tif(lgp) {\n\t\t\t\tif(Math.abs(lgp.axes[i])<th && Math.abs(axes[i])>=th) {gp.dpad[i] = 1;gp.pf=true}\n\t\t\t\tif(Math.abs(lgp.axes[i])>=th && Math.abs(axes[i])<th) {gp.dpad[i] = -1;gp.pf=true}\n\t\t\t}\n\t\t\tlgp.axes[i] = axes[i]\n\t\t}\n\t\tthis.gp = gp \n\n\t\tif(this.ev && (gp.bf || gp.pf || gp.tf)){\n\t\t\tthis.ev(gp) \n\t\t}\n\t//\tconsole.log(gp)\n\t\treturn gp ;\t\n\t}\n\tGPad.prototype.set = function(gp) {//for emulation\n\t\tthis.egp = gp ;\t\n\t}\n\tGPad.prototype.clear = function(gp) {//for emulation\n\t\tif(gp==undefined ) gp = {\n\t\t\tbuttons:[\n\t\t\t\t{pressed:false,touched:false},\n\t\t\t\t{pressed:false,touched:false}\n\t\t\t],\n\t\t\taxes:[0,0]\n\t\t}\n\t\tthis.egp = gp\n\t\tthis.cf = true ;\t\n\t}\n\treturn pox.GPad = GPad;\n});"]}
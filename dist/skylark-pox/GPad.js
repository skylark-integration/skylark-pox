/**
 * skylark-pox - A version of pox that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-pox/
 * @license MIT
 */
define(["./pox","./Device"],function(t,e){var s=function(){return this.idx=0,this.conn=!1,this.gpadcount=0,!!navigator.getGamepads&&(gamepads=navigator.getGamepads(),this.gpadcount=gamepads.length,this.gpadcount>0)};return s.prototype.init=function(t,e){if(void 0==t&&(t=0),this.idx=t,!navigator.getGamepads)return!1;let s=!0;return gamepads=navigator.getGamepads(),gamepads[this.idx]?(console.log("gpad init "+this.idx),this.axes=gamepads[this.idx].axes,this.conn=!1,this.egp=null):(this.conn=!1,s=!1),addEventListener("gamepadconnected",t=>{t.gamepad.index==this.idx&&(console.log("gpad reconnected "+t.gamepad.index),this.axes=t.gamepad.axes,this.conn=!0,this.get(),e&&e(this,!0))}),addEventListener("gamepaddisconnected",t=>{t.gamepad.index==this.idx&&(console.log("gpad disconnected "+t.gamepad.index),this.conn=!1,e&&e(this,!1))}),this.lastGp={buttons:[{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1},{pressed:!1,touched:!1}],axes:[0,0]},this.egp={buttons:[{pressed:!1,touched:!1},{pressed:!1,touched:!1}],axes:[0,0]},s},s.prototype.get=function(t){var s;if(e&&e.WebXR)if(this.emu=!1,e.isPresenting&&e.session.inputSources){const t=e.session.inputSources;for(let n=0;n<=t.length-1;n++)if(t[n].gamepad&&"xr-standard"==t[n].gamepad.mapping){if(t[n].gamepad.hand=t[n].handedness,"left"==t[n].handedness&&1==this.idx&&(s=t[n].gamepad),"right"==t[n].handedness&&0==this.idx&&(s=t[n].gamepad),s){let o=e.vrFrame.getPose(t[n].gripSpace,e.referenceSpace);o&&(s.pose={},o.transform.orientation&&(s.pose.orientation=[o.transform.orientation.x,o.transform.orientation.y,o.transform.orientation.z,o.transform.orientation.w]),o.transform.position&&(s.pose.position=[o.transform.position.x,o.transform.position.y,o.transform.position.z])),this.conn=!0;break}this.conn=!1}}else this.conn=!1;if(!s){if(null==this.egp)return null;this.conn=!0,s=this.egp,this.emu=!0}var n=this.lastGp;s.conn=this.conn,s.emu=this.emu,s.bf=!1,s.pf=!1,s.tf=!1,s.dbtn=[],s.dpad=[],s.dtouch=[];for(var o=0;o<s.buttons.length;o++)s.dbtn[o]=0,s.dtouch[o]=0,n&&n.buttons[o]&&(!n.buttons[o].pressed&&s.buttons[o].pressed&&(s.dbtn[o]=1,s.bf=!0),n.buttons[o].pressed&&!s.buttons[o].pressed&&(s.dbtn[o]=-1,s.bf=!0),!n.buttons[o].touched&&s.buttons[o].touched&&(s.dtouch[o]=1,s.tf=!0),n.buttons[o].touched&&!s.buttons[o].touched&&(s.dtouch[o]=-1,s.tf=!0)),n.buttons[o]={pressed:s.buttons[o].pressed,touched:s.buttons[o].touched};let a=[s.axes[0],s.axes[1],s.axes[2],s.axes[3]];void 0!==s.axes[2]&&void 0!==s.axes[3]?(a[0]=s.axes[2],a[1]=s.axes[3],s.stick=!0):s.stick=!1,s.eaxes=a;for(o=0;o<a.length;o++)Math.abs(a[o])<.001&&(s.axes[o]=0),s.dpad[o]=0,n&&(Math.abs(n.axes[o])<.5&&Math.abs(a[o])>=.5&&(s.dpad[o]=1,s.pf=!0),Math.abs(n.axes[o])>=.5&&Math.abs(a[o])<.5&&(s.dpad[o]=-1,s.pf=!0)),n.axes[o]=a[o];return this.gp=s,this.ev&&(s.bf||s.pf||s.tf)&&this.ev(s),s},s.prototype.set=function(t){this.egp=t},s.prototype.clear=function(t){void 0==t&&(t={buttons:[{pressed:!1,touched:!1},{pressed:!1,touched:!1}],axes:[0,0]}),this.egp=t,this.cf=!0},t.GPad=s});
//# sourceMappingURL=sourcemaps/GPad.js.map
